apiVersion: v1
kind: Service
metadata:
  name: labelwarehouse-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: labelwarehouse-api

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: labelwarehouse-api-pvc
spec:
  storageClassName: do-block-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: labelwarehouse-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: labelwarehouse-api
  template:
    metadata:
      labels:
        app: labelwarehouse-api
    spec:
      volumes:
      - name: labelwarehouse-api-storage
        persistentVolumeClaim: 
          claimName: labelwarehouse-api-pvc
      containers:
      - name: labelwarehouse-api
        image: registry.digitalocean.com/labelwarehouse/labelwarehouse-api:0.0.0.4 # labelwarehouse-api-version
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: "/data"
          name: labelwarehouse-api-storage
        env:
        - name: DB_HOST
          value: "mongodb.infrastructure.svc.cluster.local"

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: labelwarehouse-api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - "api.staging.labelwarehouse.sheepieslab.com"
  rules:
  - host: "api.staging.labelwarehouse.sheepieslab.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: labelwarehouse-api
            port:
              number: 80
